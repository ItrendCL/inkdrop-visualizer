name: Build and Release for Linux and Alpine

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [linux, alpine]
    outputs:
      tag_name: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install project dependencies
        run: npm install

      - name: Run build script
        run: npm run build

      - name: Install pkg globally
        run: npm install -g pkg

      - name: Build executable for ${{ matrix.target }} 
        run: pkg -t node18-${{ matrix.target }}-x64 package.json -o release/inkdrop

      - name: Get the version tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Archive the executable
        run: tar -czvf release/inkdrop-${{ matrix.target }}-x64-${{ steps.get_version.outputs.VERSION }}.tar.gz -C release inkdrop

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: inkdrop-${{ matrix.target }}-${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload executable to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/inkdrop-${{ matrix.target }}-x64-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_name: inkdrop-${{ matrix.target }}-x64-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_content_type: application/gzip